daemon off;

worker_processes  auto;

events {
    worker_connections  1024;
    use epoll;
    multi_accept on;
}

http {

    log_format logstash_json escape=json '{'
    '"agent": "$http_user_agent", '
    '"body_bytes_sent": "$body_bytes_sent", '
    '"bytes_sent": "$bytes_sent", '
    '"clientip": "$remote_addr", '
    '"http_host": "$http_host", '
    '"log_timestamp": "$time_local", '
    '"proxy_host": "$proxy_host", '
    '"referrer": "$http_referer", '
    '"request": "$request", '
    '"request_time": $request_time, '
    '"request_length": $request_length, '
    '"status": $status, '
    '"upstream_addr": "$upstream_addr", '
    '"upstream_response_time": "$upstream_response_time", '
    '"upstream_status": "$upstream_status", '
    '"x_forwarded_for": "$http_x_forwarded_for", '
    '"x_forwarded_port": "$http_x_forwarded_port", '
    '"x_forwarded_proto": "$http_x_forwarded_proto"'
    '}';

    access_log /var/log/nginx/access.log logstash_json;

    gzip on;
    gzip_proxied any;
    gzip_vary on;
    gzip_types application/json application/x-tar;
    gzip_min_length 1000;

    variables_hash_max_size 1024;
    variables_hash_bucket_size 64;
    server_names_hash_bucket_size 64;
    types_hash_max_size 2048;
    types_hash_bucket_size 64;
    client_max_body_size 100m;

    proxy_read_timeout 60;
    proxy_buffers 256 32k;
    proxy_busy_buffers_size 64k;


    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;

    default_type        application/octet-stream;

    server {
        listen 80 default_server;
        listen [::]:80 default_server ipv6only=on;
        server_name SERVER_NAME_HERE;

        resolver DNS_RESOLVER_HERE valid=30s;

        # for elb health checks
        location = /status {
            return 200 'ok';
        }

        location ~* ^/(.*) {
            set $s3_bucket_endpoint "BUCKET_NAME_HERE";
            proxy_http_version     1.1;
            proxy_buffering        off;
            proxy_ignore_headers   "Set-Cookie";
            proxy_hide_header      x-amz-id-2;
            proxy_hide_header      x-amz-request-id;
            proxy_hide_header      x-amz-meta-s3cmd-attrs;
            proxy_hide_header      Set-Cookie;
            proxy_set_header       Host $s3_bucket_endpoint;
            proxy_set_header       Authorization "";
            proxy_intercept_errors on;
            proxy_pass http://$s3_bucket_endpoint/$1;
            break;
        }

    }
}